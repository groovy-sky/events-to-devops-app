{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "ARM template for Storage Account with IP whitelist and managed identity access",
    "author": "groovy-sky"
  },
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Name of the Storage Account (3-24 characters, lowercase letters and numbers only)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for Storage Account"
      }
    },
    "fileShareName": {
      "type": "string",
      "defaultValue": "applogs",
      "metadata": {
        "description": "Name of the file share"
      }
    },
    "fileShareQuota": {
      "type": "int",
      "defaultValue": 100,
      "minValue": 1,
      "maxValue": 102400,
      "metadata": {
        "description": "File share quota in GB (1-102400)"
      }
    },
    "containerAppOutboundIp": {
      "type": "string",
      "metadata": {
        "description": "Outbound IP of the Container App to whitelist"
      }
    },
    "managedIdentityPrincipalId": {
      "type": "string",
      "metadata": {
        "description": "Principal ID of the Container App's managed identity"
      }
    },
    "currentUserIp": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Current user's IP for management access (optional)"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags to apply to all resources"
      }
    }
  },
  "variables": {
    "ipRules": "[if(empty(parameters('currentUserIp')), array(createObject('value', parameters('containerAppOutboundIp'), 'action', 'Allow')), array(createObject('value', parameters('containerAppOutboundIp'), 'action', 'Allow'), createObject('value', parameters('currentUserIp'), 'action', 'Allow')))]",
    "storageFileDataSmbShareContributorRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '0c867c2a-1d8c-454a-a3db-ab2ea1bdc8bb')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "networkAcls": {
          "defaultAction": "Deny",
          "bypass": "AzureServices",
          "ipRules": "[variables('ipRules')]",
          "virtualNetworkRules": []
        },
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "shareDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccountName'), '/default/', parameters('fileShareName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccountName'), 'default')]"
      ],
      "properties": {
        "shareQuota": "[parameters('fileShareQuota')]",
        "enabledProtocols": "SMB"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), parameters('managedIdentityPrincipalId'), variables('storageFileDataSmbShareContributorRoleId'))]",
      "scope": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('storageFileDataSmbShareContributorRoleId')]",
        "principalId": "[parameters('managedIdentityPrincipalId')]",
        "principalType": "ServicePrincipal"
      }
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "storageAccountId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
    },
    "fileShareName": {
      "type": "string",
      "value": "[parameters('fileShareName')]"
    }
  }
}